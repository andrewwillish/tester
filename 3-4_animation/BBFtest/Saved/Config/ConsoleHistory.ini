[ConsoleHistoryPythonREPL]
History=print ('hello world')
History="import sys\r\nprint (sys.version)"
History="import sys\r\nprint(sys.version)"

[ConsoleHistoryPython]
History=/Content/Python/tester.py
History=/BBFtest/Content/Python/tester.py
History=C:/UNREAL_PIPELINE/LEARNING_UNREAL/BBFtest/Content/Python/tester.py
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python\createCube.py
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python\deleteCube.py
History=version()
History=sys.version
History="import sys\r\nsys.version"
History="import sys\r\nprint(sys.version)"
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python
History=input('hehe')
History=raw_input('haha')
History=input()
History="name = input(\'hahaha\')\r\nprint (name)"
History="import sys\r\nfor x ini sys.path:\r\n\tprint(x)"
History=import PySide6
History=import PySide
History="import os\r\nprint(os.environ[\'PYTHONPATH\'])"
History="import sys\r\nfor x in sys.path:\r\n\tprint(x)"
History=import sys
History=sys.path
History="for x in sys.path:\r\n\tprint(x)"
History=unreal.Actor()
History=a = unreal.Actor()
History=print(a)
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python\selectActors.py
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python\sequencer_creator.py
History=unreal.log('test')
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT\')\r\nfor x in assets: print (x)"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT\')\r\nfor x in assets: print (x.get_full_name())"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x)"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.class)"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (type)"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.type)"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.type())"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (dir(x))"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.get_class())"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.to_soft_object_path())"
History="asset_reg = unreal.AssetRegistryHelpers.get_asset_registry()\r\nassets = asset_reg.get_assets_by_path(\'/Game/SHOT/EPS000_SH000\')\r\nfor x in assets: print (x.asset_class)"
History=all_assets = unreal.AssetRegistryHelpers.get_asset_registry().get_all_assets()
History=obj = [x for x in all_assets if x.AssetClassPath=="LevelSequence"]
History=obj = [x for x in all_assets if x.asset_class=="LevelSequence"]
History=print (obj)
History=print (all_assets)
History=for x in all_assets:
History="for x in all_assets:\r\n\tprint (x)"
History=import unreal
History=a = unreal.list_assets('/Game/', recursive=True)
History=a = unreal.EditorAssetLibrary.list_assets('/Game/', recursive=True)
History=a = unreal.EditorAssetLibrary.list_assets('/Game/SHOT', recursive=True)
History=print (a)
History=a = unreal.EditorAssetLibrary.checkout_directory('/Game/SHOT', recursive=True)
History=print ('test')
History=C:\UNREAL_PIPELINE\LEARNING_UNREAL\BBFtest\Content\Python\pyqt_test.py
History=C:\tester\3-4_animation\BBFtest\Content\Python\unreal_playblast.py
History=menus = unreal.ToolMenus.get()
History=edit_menu = menus.find_menu("LevelEditor.MainMenu.Edit")
History=print(edit_menu)
History=tool_menus = unreal.ToolMenus.get()
History=main_menu = tool_menus.find_menu("LevelEditor.MainMenu")
History=window_menu = main_menu.add_sub_menu("Window", "CustomTools", 'hehe', 'hoho')
History=menus.refresh_all_widgets()
History=C:\tester\3-4_animation\BBFtest\Content\Python\unreal_startup.py
History=import unreal_playblast
History=reload()

